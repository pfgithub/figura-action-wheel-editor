import type { Avatar } from "@/types";

/*
Use Store to store the values
https://figura-wiki.pages.dev/globals/Avatar#store
store(key, value)

Sample code

local mainPage = action_wheel:newPage()
action_wheel:setPage(mainPage)


function pings.bowl()
    animations.model.test1:play()

end


local action = mainPage:newAction()
    :title("Test action1")
    :item("minecraft:dirt")
    :hoverColor(1, 0, 1)
    :onLeftClick(pings.bowl)

vanilla_model.PLAYER:setVisible(false)

function events.tick()
    local crouching = player:getPose() == "CROUCHING"
    local sprinting = player:isSprinting()
    local blocking = player:isBlocking()
    local fishing = player:isFishing()
    local sleeping = player:getPose() == "SLEEPING"
    local swimming = player:getPose() == "SWIMMING"
    local flying = player:getPose() == "FALL_FLYING"
    local walking = player:getVelocity().xz:length() > .01

    animations.model.i:setPlaying(not walking and not crouching)
end

*/

export function generateLua(avatar: Avatar) {
    return [
        `--------------------------------------`,
        `-- This file is generated by --`,
        `-- https://pfg.pw/figura-action-wheel-editor`,
        ``,
        `-- Edit it at the website.`,
        `--------------------------------------`,
        ``,
        ``,
        `-- %__DATA_MARKER__%`,
        JSON.stringify(avatar, null, 2).split("\n").map(l => "-- " + l).join("\n"),
        `-- %__DATA_MARKER__%`,
        ``
    ].join("\n");
}

export function parseLua(source: string): Avatar {
    const dmsplit = source.split("-- %__DATA_MARKER__%");
    if(dmsplit.length !== 3) throw new Error("Invalid or corrupted source");
    return JSON.parse(dmsplit[1].split("\n").map(l => l.startsWith("--") ? l.slice(2) : l).join("\n"));
}